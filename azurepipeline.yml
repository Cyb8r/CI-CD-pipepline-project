trigger: 
- main

pool: NEW_POOL

variables:
  KUBECONFIG: 'home/dev-test/kubeconfig.txt' # Specify the correct path to your kubeconfig file
  dockerRegistoryServiceConnection: 'ACR_MSI'
  imageRepository: 'myapplicationdeployments.azurecr.io/maven-app'
  dockerFilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'

stages:
- stage: BuildJar
  displayName: 'Build Jar'
  jobs: 
  - job: BuildJar
    steps: 
    - task: Maven@3
      inputs: 
        mavenPomFile: 'pom.xml'
        goals: 'package'
      displayName: 'build the app'
- stage: BuildDockerImage
  displayName: 'Build docker image'
  jobs: 
  - job: BuildImage 
    steps: 
    - task: DockerInstaller@0
      inputs: 
        dockerVersion: '17.09.0-ce'
- stage: InstallTrivy
  displayName: 'Install Trivy'
  jobs:
  - job: InstallTrivy
    steps:
    - script: |
        echo "Installing Trivy..."
        curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b $HOME/bin
        echo "Trivy installed"
      displayName: 'Install Trivy'
- stage: ScanDockerImage
  displayName: 'Scan Docker image'
  jobs: 
  - job: ScanDockerImage
    steps: 
    - script: |
       echo "Scanning Docker image..."
       dockerImage="myapplicationdeployments.azurecr.io/maven-app:6.0"
       $HOME/bin/trivy image --exit-code 1 --severity HIGH,CRITICAL $dockerImage
      displayName: 'Scan Docker Image'
- stage: PushDockerImageToACR 
  displayName: 'Push docker image to ACR'
  jobs:
  - job: PushDockerImageToACR 
    steps:
    - task: Docker@2
      inputs:
        containerRegistry: 'AzureContainerRegistryServiceConnection' # Use your ACR service connection
        repository: 'myapplicationdeployments.azurecr.io/maven-app'
        command: 'push'
        tags: '8.0'
      displayName: 'Push Docker image to ACR'
- stage: Deploy_To_Kubernetes
  displayName: 'Deploy Application to Kubernetes'
  jobs:
  - job: DeployApp
    steps:
    - script: |
        echo "Deploying the app to Kubernetes..."
        $HOME/bin/kubectl apply -f K8/deployment.yaml
      displayName: 'Deploy Application'

